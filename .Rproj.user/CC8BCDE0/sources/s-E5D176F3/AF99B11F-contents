# scrape test
install.packages("selectr")
install.packages("xml2")
install.packages("rvest")
install.packages("jsonlite")
library(selectr)
library(xml2)
library(rvest)
library(jsonlite)
library(tidyverse)

url <- "http://ncov2019.live"
url <- "https://www.amazon.in/OnePlus-Mirror-Black-64GB-Memory/dp/B0756Z43QS?tag=googinhydr18418-21&tag=googinkenshoo-21&ascsubtag=aee9a916-6acd-4409-92ca-3bdbeb549f80"

webpage <- read_html(url)

# As you can see below, I extracted the title of the product with the help of html_nodes in which I passed the id of the title — h1#title — and webpage which had stored HTML content.
#I could also get the title text using html_text and print the text of the title with the help of the head () function.
# #scrape title of the product>
title_html <- html_nodes(webpage, "h1#title")
title_html <- html_nodes(webpage, "div")

title <- html_text(title_html)
head(title)

#We could get the title of the product using spaces and \n.
#The next step would be to remove spaces and new line with the help of the str_replace_all() function in the stringr library.
# remove all space and new lines
str_replace_all(title, "[\r\n]" , "")

# Price of the product:
# scrape the price of the product> 
price_html <- html_nodes(webpage, "span#priceblock_ourprice")
price <- html_text(price_html)
# remove spaces and new line>
str_replace_all(price, "[\r\n]" , "")
#print price value> 
head(price)

# scrape product description>
desc_html <- html_nodes(webpage, ‘div#productDescription’)> desc <- html_text(desc_html)
